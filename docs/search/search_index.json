{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Datetime-Selenium Datetime-Selenium allows you to send/retrieve datetime.datetime objects to/from web forms using Selenium . Installation $ pip install datetime-selenium Quickstart First, clone an example file from the Datetime-Selenium repo. $ curl https://raw.githubusercontent.com/dsbowen/datetime-selenium/master/form.html --output form.html Let's send the current date and time to all input in the form. from datetime_selenium import send_datetime from selenium.webdriver import Chrome from datetime import datetime driver = Chrome() driver.get('data:text/html,'+open('form.html').read()) datetime_ = datetime.utcnow() css_selectors = ( 'input[type=date]', 'input[type=datetime-local]', 'input[type=month]', 'input[type=time]', 'input[type=week]' ) for selector in css_selectors: input_ = driver.find_element_by_css_selector(selector) send_datetime(input_, datetime_) You'll see the form filled in in your selenium browser. Citation @software{bowen2020datetime-selenium, author = {Dillon Bowen}, title = {Datetime-Selenium}, url = {https://dsbowen.github.io/datetime-selenium/}, date = {2020-06-29}, } License Users must cite this package in any publications which use it. It is licensed with the MIT License .","title":"Home"},{"location":"#datetime-selenium","text":"Datetime-Selenium allows you to send/retrieve datetime.datetime objects to/from web forms using Selenium .","title":"Datetime-Selenium"},{"location":"#installation","text":"$ pip install datetime-selenium","title":"Installation"},{"location":"#quickstart","text":"First, clone an example file from the Datetime-Selenium repo. $ curl https://raw.githubusercontent.com/dsbowen/datetime-selenium/master/form.html --output form.html Let's send the current date and time to all input in the form. from datetime_selenium import send_datetime from selenium.webdriver import Chrome from datetime import datetime driver = Chrome() driver.get('data:text/html,'+open('form.html').read()) datetime_ = datetime.utcnow() css_selectors = ( 'input[type=date]', 'input[type=datetime-local]', 'input[type=month]', 'input[type=time]', 'input[type=week]' ) for selector in css_selectors: input_ = driver.find_element_by_css_selector(selector) send_datetime(input_, datetime_) You'll see the form filled in in your selenium browser.","title":"Quickstart"},{"location":"#citation","text":"@software{bowen2020datetime-selenium, author = {Dillon Bowen}, title = {Datetime-Selenium}, url = {https://dsbowen.github.io/datetime-selenium/}, date = {2020-06-29}, }","title":"Citation"},{"location":"#license","text":"Users must cite this package in any publications which use it. It is licensed with the MIT License .","title":"License"},{"location":"api/","text":"a.src-href { float: right; } p.attr { margin-top: 0.5em; margin-left: 1em; } p.func-header { background-color: gainsboro; border-radius: 0.1em; padding: 0.5em; padding-left: 1em; } table.field-table { border-radius: 0.1em } API datetime_selenium. send_datetime def datetime_selenium. send_datetime ( input_, datetime_ ) [source] Send a datetime object to a form input. Parameters: input_ : selenium.webdriver.remote.webelement.WebElement The form input to which the datetime object will be sent. datetime_ : datetime.datetime The datetime object to be sent. datetime_selenium. get_datetime def datetime_selenium. get_datetime ( input_type, response ) [source] Get a datetime object from a form response after a POST request. Parameters: input_type : str Type of the input tag. response : str Response to the input tag. Returns: datetime : datetime.datetime The response converted to a datetime object if possible, otherwise the raw response. This method will fail to convert the response if the input type is invalid or if the client did not enter a response in this input tag.","title":"API"},{"location":"api/#api","text":"","title":"API"},{"location":"api/#datetime_seleniumsend_datetime","text":"def datetime_selenium. send_datetime ( input_, datetime_ ) [source] Send a datetime object to a form input. Parameters: input_ : selenium.webdriver.remote.webelement.WebElement The form input to which the datetime object will be sent. datetime_ : datetime.datetime The datetime object to be sent.","title":"datetime_selenium.send_datetime"},{"location":"api/#datetime_seleniumget_datetime","text":"def datetime_selenium. get_datetime ( input_type, response ) [source] Get a datetime object from a form response after a POST request. Parameters: input_type : str Type of the input tag. response : str Response to the input tag. Returns: datetime : datetime.datetime The response converted to a datetime object if possible, otherwise the raw response. This method will fail to convert the response if the input type is invalid or if the client did not enter a response in this input tag.","title":"datetime_selenium.get_datetime"},{"location":"requests/","text":"Get datetime objects from a form You can also get datetime.datetime objects from a form using Flask requests . Create this simple Flask app in app.py . from datetime_selenium import get_datetime from flask import Flask, request app = Flask(__name__) @app.route('/', methods=['GET','POST']) def index(): if request.method == 'POST': for html_type, val in request.form.items(): print(get_datetime(html_type, val)) return open('form.html').read() if __name__ == '__main__': app.run(debug=True) If you haven't already, download form.html . $ curl https://raw.githubusercontent.com/dsbowen/datetime-selenium/master/form.html --output form.html Run the app from your terminal. $ python app.py And navigate to http://localhost:5000/ in your browser. Fill in the web form and hit the submit button. You'll see the datetime.datetime objects printed in your terminal.","title":"Get datetime objects"},{"location":"requests/#get-datetime-objects-from-a-form","text":"You can also get datetime.datetime objects from a form using Flask requests . Create this simple Flask app in app.py . from datetime_selenium import get_datetime from flask import Flask, request app = Flask(__name__) @app.route('/', methods=['GET','POST']) def index(): if request.method == 'POST': for html_type, val in request.form.items(): print(get_datetime(html_type, val)) return open('form.html').read() if __name__ == '__main__': app.run(debug=True) If you haven't already, download form.html . $ curl https://raw.githubusercontent.com/dsbowen/datetime-selenium/master/form.html --output form.html Run the app from your terminal. $ python app.py And navigate to http://localhost:5000/ in your browser. Fill in the web form and hit the submit button. You'll see the datetime.datetime objects printed in your terminal.","title":"Get datetime objects from a form"}]}